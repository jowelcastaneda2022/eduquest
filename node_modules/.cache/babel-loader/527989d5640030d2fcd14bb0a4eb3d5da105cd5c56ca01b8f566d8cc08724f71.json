{"ast":null,"code":"var _jsxFileName = \"/Users/crescendo/Downloads/edu-quest/src/components/MathGame/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport \"./style.scss\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MathGame = ({\n  roundsData,\n  onFinish\n}) => {\n  _s();\n  const [currentRound, setCurrentRound] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(roundsData[0].questions.length).fill(null));\n  const [score, setScore] = useState(0);\n  const handleDrop = (e, index) => {\n    const answer = parseInt(e.dataTransfer.getData('answer'));\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[index] = answer;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n  const handleNextRound = () => {\n    let roundScore = 0;\n    selectedAnswers.forEach((answer, index) => {\n      if (answer === roundsData[currentRound].questions[index].answer) {\n        roundScore += 1;\n      }\n    });\n    setScore(score + roundScore);\n    if (currentRound < roundsData.length - 1) {\n      setCurrentRound(currentRound + 1);\n      setSelectedAnswers(Array(roundsData[currentRound + 1].questions.length).fill(null));\n    } else {\n      onFinish(score + roundScore);\n    }\n  };\n  const isRoundComplete = selectedAnswers.every(answer => answer !== null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"math-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"questions\",\n      children: roundsData[currentRound].questions.map((q, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `question ${selectedAnswers[index] !== null ? 'has-answer' : ''}`,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"q-wrapper\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"question-text\",\n            children: q.question\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"answer-slot\",\n            onDragOver: e => e.preventDefault(),\n            onDrop: e => handleDrop(e, index),\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"drop-slot\",\n              children: selectedAnswers[index] !== null ? selectedAnswers[index] : /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Drag answer here\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 79\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"answers\",\n      children: roundsData[currentRound].answers.map((answer, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"answer\",\n        draggable: true,\n        onDragStart: e => e.dataTransfer.setData('answer', answer),\n        children: answer\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pushable-btn\",\n      onClick: handleNextRound,\n      disabled: !isRoundComplete,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"front\",\n        children: currentRound < roundsData.length - 1 ? 'Next' : 'Check Result'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n_s(MathGame, \"KuiOyu/LQ42Lg336CArdGBDVt1s=\");\n_c = MathGame;\nexport default MathGame;\nvar _c;\n$RefreshReg$(_c, \"MathGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","MathGame","roundsData","onFinish","_s","currentRound","setCurrentRound","selectedAnswers","setSelectedAnswers","Array","questions","length","fill","score","setScore","handleDrop","e","index","answer","parseInt","dataTransfer","getData","newSelectedAnswers","handleNextRound","roundScore","forEach","isRoundComplete","every","className","children","map","q","question","fileName","_jsxFileName","lineNumber","columnNumber","onDragOver","preventDefault","onDrop","answers","draggable","onDragStart","setData","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/crescendo/Downloads/edu-quest/src/components/MathGame/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport \"./style.scss\"\n\nconst MathGame = ({ roundsData, onFinish }) => {\n  const [currentRound, setCurrentRound] = useState(0);\n  const [selectedAnswers, setSelectedAnswers] = useState(Array(roundsData[0].questions.length).fill(null));\n  const [score, setScore] = useState(0);\n\n  const handleDrop = (e, index) => {\n    const answer = parseInt(e.dataTransfer.getData('answer'));\n    const newSelectedAnswers = [...selectedAnswers];\n    newSelectedAnswers[index] = answer;\n    setSelectedAnswers(newSelectedAnswers);\n  };\n\n  const handleNextRound = () => {\n    let roundScore = 0;\n    selectedAnswers.forEach((answer, index) => {\n      if (answer === roundsData[currentRound].questions[index].answer) {\n        roundScore += 1;\n      }\n    });\n    setScore(score + roundScore);\n\n    if (currentRound < roundsData.length - 1) {\n      setCurrentRound(currentRound + 1);\n      setSelectedAnswers(Array(roundsData[currentRound + 1].questions.length).fill(null));\n    } else {\n      onFinish(score + roundScore);\n    }\n  };\n\n  const isRoundComplete = selectedAnswers.every(answer => answer !== null);\n\n  return (\n    <div className=\"math-game\">\n      <div className=\"questions\">\n        {roundsData[currentRound].questions.map((q, index) => (\n          <div key={index} className={`question ${selectedAnswers[index] !== null ? 'has-answer' : ''}`}>\n            <div className=\"q-wrapper\">\n              <div className=\"question-text\">{q.question}</div>\n              <div className=\"answer-slot\" onDragOver={(e) => e.preventDefault()} onDrop={(e) => handleDrop(e, index)}>\n                <div className=\"drop-slot\">\n                  {selectedAnswers[index] !== null ? selectedAnswers[index] : <span>Drag answer here</span>}\n                </div>\n              </div>\n            </div>\n          </div>\n        ))}\n      </div>\n      <div className=\"answers\">\n        {roundsData[currentRound].answers.map((answer, index) => (\n          <div key={index} className=\"answer\" draggable onDragStart={(e) => e.dataTransfer.setData('answer', answer)}>\n            {answer}\n          </div>\n        ))}\n      </div>\n      <button className=\"pushable-btn\" onClick={handleNextRound} disabled={!isRoundComplete}>\n        <span className=\"shadow\"></span>\n        <span className=\"edge\"></span>\n        <span className=\"front\">\n          {currentRound < roundsData.length - 1 ? 'Next' : 'Check Result'}\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default MathGame;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}