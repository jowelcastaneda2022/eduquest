{"ast":null,"code":"var _jsxFileName = \"/Users/crescendo/Downloads/edu-quest/src/components/WordScrambleGame/index.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './style.scss';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WordScrambleGame = ({\n  wordsData,\n  onFinish\n}) => {\n  _s();\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [letters, setLetters] = useState(wordsData[0].scrambled.split(''));\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [score, setScore] = useState(0);\n  const [hasMoved, setHasMoved] = useState(false);\n  const handleDrop = (e, index) => {\n    const draggedLetterIndex = e.dataTransfer.getData('letterIndex');\n    const newLetters = [...letters];\n    const draggedLetter = newLetters[draggedLetterIndex];\n    newLetters.splice(draggedLetterIndex, 1);\n    newLetters.splice(index, 0, draggedLetter);\n    setLetters(newLetters);\n    setHasMoved(true);\n    if (newLetters.join('') === wordsData[currentWordIndex].correct) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n  };\n  const handleDragStart = (e, index) => {\n    e.dataTransfer.setData('letterIndex', index);\n  };\n  const handleNextWord = () => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n    if (currentWordIndex < wordsData.length - 1) {\n      const nextIndex = currentWordIndex + 1;\n      setCurrentWordIndex(nextIndex);\n      setLetters(wordsData[nextIndex].scrambled.split(''));\n      setIsCorrect(false);\n      setHasMoved(false); // Reset hasMoved when moving to the next word\n    } else {\n      onFinish(score + (isCorrect ? 1 : 0));\n    }\n  };\n  const isWordComplete = letters.join('') === wordsData[currentWordIndex].correct;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"word-scramble-game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"scrambled-word\",\n      children: letters.map((letter, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"letter-box\",\n        draggable: true,\n        onDragStart: e => handleDragStart(e, index),\n        onDrop: e => handleDrop(e, index),\n        onDragOver: e => e.preventDefault(),\n        children: letter\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"image-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"circle circle-one\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"img-content\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: wordsData[currentWordIndex].image,\n          alt: \"word\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"circle circle-two\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"pushable-btn\",\n      onClick: handleNextWord,\n      disabled: !isWordComplete && !hasMoved // Enable the button if either the word is complete or a box has been moved\n      ,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"shadow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"edge\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n        className: \"front\",\n        children: currentWordIndex < wordsData.length - 1 ? 'Next' : 'Finish'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n};\n_s(WordScrambleGame, \"UDDUyBMhm73O8mVTGEPDkd8nI8g=\");\n_c = WordScrambleGame;\nexport default WordScrambleGame;\nvar _c;\n$RefreshReg$(_c, \"WordScrambleGame\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","WordScrambleGame","wordsData","onFinish","_s","currentWordIndex","setCurrentWordIndex","letters","setLetters","scrambled","split","isCorrect","setIsCorrect","score","setScore","hasMoved","setHasMoved","handleDrop","e","index","draggedLetterIndex","dataTransfer","getData","newLetters","draggedLetter","splice","join","correct","handleDragStart","setData","handleNextWord","length","nextIndex","isWordComplete","className","children","map","letter","draggable","onDragStart","onDrop","onDragOver","preventDefault","fileName","_jsxFileName","lineNumber","columnNumber","class","src","image","alt","onClick","disabled","_c","$RefreshReg$"],"sources":["/Users/crescendo/Downloads/edu-quest/src/components/WordScrambleGame/index.js"],"sourcesContent":["import React, { useState } from 'react';\nimport './style.scss';\n\nconst WordScrambleGame = ({ wordsData, onFinish }) => {\n  const [currentWordIndex, setCurrentWordIndex] = useState(0);\n  const [letters, setLetters] = useState(wordsData[0].scrambled.split(''));\n  const [isCorrect, setIsCorrect] = useState(false);\n  const [score, setScore] = useState(0);\n  const [hasMoved, setHasMoved] = useState(false);\n\n  const handleDrop = (e, index) => {\n    const draggedLetterIndex = e.dataTransfer.getData('letterIndex');\n    const newLetters = [...letters];\n    const draggedLetter = newLetters[draggedLetterIndex];\n\n    newLetters.splice(draggedLetterIndex, 1);\n    newLetters.splice(index, 0, draggedLetter);\n\n    setLetters(newLetters);\n    setHasMoved(true);\n\n    if (newLetters.join('') === wordsData[currentWordIndex].correct) {\n      setIsCorrect(true);\n    } else {\n      setIsCorrect(false);\n    }\n  };\n\n  const handleDragStart = (e, index) => {\n    e.dataTransfer.setData('letterIndex', index);\n  };\n\n  const handleNextWord = () => {\n    if (isCorrect) {\n      setScore(score + 1);\n    }\n\n    if (currentWordIndex < wordsData.length - 1) {\n      const nextIndex = currentWordIndex + 1;\n      setCurrentWordIndex(nextIndex);\n      setLetters(wordsData[nextIndex].scrambled.split(''));\n      setIsCorrect(false);\n      setHasMoved(false); // Reset hasMoved when moving to the next word\n    } else {\n      onFinish(score + (isCorrect ? 1 : 0));\n    }\n  };\n\n  const isWordComplete = letters.join('') === wordsData[currentWordIndex].correct;\n\n  return (\n    <div className=\"word-scramble-game\">\n      <div className=\"scrambled-word\">\n        {letters.map((letter, index) => (\n          <div\n            key={index}\n            className=\"letter-box\"\n            draggable\n            onDragStart={(e) => handleDragStart(e, index)}\n            onDrop={(e) => handleDrop(e, index)}\n            onDragOver={(e) => e.preventDefault()}\n          >\n            {letter}\n          </div>\n        ))}\n      </div>\n      {/* <div className=\"status\">\n        {isCorrect ? <p>Correct!</p> : <p>Keep trying...</p>}\n      </div> */}\n      <div className=\"image-container\">\n        <div class=\"circle circle-one\"></div>\n        <div class=\"img-content\">\n            <img src={wordsData[currentWordIndex].image} alt=\"word\" />\n        </div>\n        <div class=\"circle circle-two\"></div>\n      </div>\n      <button\n        className=\"pushable-btn\"\n        onClick={handleNextWord}\n        disabled={!isWordComplete && !hasMoved} // Enable the button if either the word is complete or a box has been moved\n      >\n        <span className=\"shadow\"></span>\n        <span className=\"edge\"></span>\n        <span className=\"front\">\n          {currentWordIndex < wordsData.length - 1 ? 'Next' : 'Finish'}\n        </span>\n      </button>\n    </div>\n  );\n};\n\nexport default WordScrambleGame;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtB,MAAMC,gBAAgB,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EACpD,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGR,QAAQ,CAAC,CAAC,CAAC;EAC3D,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAACI,SAAS,CAAC,CAAC,CAAC,CAACO,SAAS,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC;EACxE,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,KAAK,CAAC;EACjD,MAAM,CAACe,KAAK,EAAEC,QAAQ,CAAC,GAAGhB,QAAQ,CAAC,CAAC,CAAC;EACrC,MAAM,CAACiB,QAAQ,EAAEC,WAAW,CAAC,GAAGlB,QAAQ,CAAC,KAAK,CAAC;EAE/C,MAAMmB,UAAU,GAAGA,CAACC,CAAC,EAAEC,KAAK,KAAK;IAC/B,MAAMC,kBAAkB,GAAGF,CAAC,CAACG,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC;IAChE,MAAMC,UAAU,GAAG,CAAC,GAAGhB,OAAO,CAAC;IAC/B,MAAMiB,aAAa,GAAGD,UAAU,CAACH,kBAAkB,CAAC;IAEpDG,UAAU,CAACE,MAAM,CAACL,kBAAkB,EAAE,CAAC,CAAC;IACxCG,UAAU,CAACE,MAAM,CAACN,KAAK,EAAE,CAAC,EAAEK,aAAa,CAAC;IAE1ChB,UAAU,CAACe,UAAU,CAAC;IACtBP,WAAW,CAAC,IAAI,CAAC;IAEjB,IAAIO,UAAU,CAACG,IAAI,CAAC,EAAE,CAAC,KAAKxB,SAAS,CAACG,gBAAgB,CAAC,CAACsB,OAAO,EAAE;MAC/Df,YAAY,CAAC,IAAI,CAAC;IACpB,CAAC,MAAM;MACLA,YAAY,CAAC,KAAK,CAAC;IACrB;EACF,CAAC;EAED,MAAMgB,eAAe,GAAGA,CAACV,CAAC,EAAEC,KAAK,KAAK;IACpCD,CAAC,CAACG,YAAY,CAACQ,OAAO,CAAC,aAAa,EAAEV,KAAK,CAAC;EAC9C,CAAC;EAED,MAAMW,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAInB,SAAS,EAAE;MACbG,QAAQ,CAACD,KAAK,GAAG,CAAC,CAAC;IACrB;IAEA,IAAIR,gBAAgB,GAAGH,SAAS,CAAC6B,MAAM,GAAG,CAAC,EAAE;MAC3C,MAAMC,SAAS,GAAG3B,gBAAgB,GAAG,CAAC;MACtCC,mBAAmB,CAAC0B,SAAS,CAAC;MAC9BxB,UAAU,CAACN,SAAS,CAAC8B,SAAS,CAAC,CAACvB,SAAS,CAACC,KAAK,CAAC,EAAE,CAAC,CAAC;MACpDE,YAAY,CAAC,KAAK,CAAC;MACnBI,WAAW,CAAC,KAAK,CAAC,CAAC,CAAC;IACtB,CAAC,MAAM;MACLb,QAAQ,CAACU,KAAK,IAAIF,SAAS,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;IACvC;EACF,CAAC;EAED,MAAMsB,cAAc,GAAG1B,OAAO,CAACmB,IAAI,CAAC,EAAE,CAAC,KAAKxB,SAAS,CAACG,gBAAgB,CAAC,CAACsB,OAAO;EAE/E,oBACE3B,OAAA;IAAKkC,SAAS,EAAC,oBAAoB;IAAAC,QAAA,gBACjCnC,OAAA;MAAKkC,SAAS,EAAC,gBAAgB;MAAAC,QAAA,EAC5B5B,OAAO,CAAC6B,GAAG,CAAC,CAACC,MAAM,EAAElB,KAAK,kBACzBnB,OAAA;QAEEkC,SAAS,EAAC,YAAY;QACtBI,SAAS;QACTC,WAAW,EAAGrB,CAAC,IAAKU,eAAe,CAACV,CAAC,EAAEC,KAAK,CAAE;QAC9CqB,MAAM,EAAGtB,CAAC,IAAKD,UAAU,CAACC,CAAC,EAAEC,KAAK,CAAE;QACpCsB,UAAU,EAAGvB,CAAC,IAAKA,CAAC,CAACwB,cAAc,CAAC,CAAE;QAAAP,QAAA,EAErCE;MAAM,GAPFlB,KAAK;QAAAwB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAQP,CACN;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAIN9C,OAAA;MAAKkC,SAAS,EAAC,iBAAiB;MAAAC,QAAA,gBAC9BnC,OAAA;QAAK+C,KAAK,EAAC;MAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC,eACrC9C,OAAA;QAAK+C,KAAK,EAAC,aAAa;QAAAZ,QAAA,eACpBnC,OAAA;UAAKgD,GAAG,EAAE9C,SAAS,CAACG,gBAAgB,CAAC,CAAC4C,KAAM;UAACC,GAAG,EAAC;QAAM;UAAAP,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzD,CAAC,eACN9C,OAAA;QAAK+C,KAAK,EAAC;MAAmB;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAM,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClC,CAAC,eACN9C,OAAA;MACEkC,SAAS,EAAC,cAAc;MACxBiB,OAAO,EAAErB,cAAe;MACxBsB,QAAQ,EAAE,CAACnB,cAAc,IAAI,CAAClB,QAAS,CAAC;MAAA;MAAAoB,QAAA,gBAExCnC,OAAA;QAAMkC,SAAS,EAAC;MAAQ;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAChC9C,OAAA;QAAMkC,SAAS,EAAC;MAAM;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC9B9C,OAAA;QAAMkC,SAAS,EAAC,OAAO;QAAAC,QAAA,EACpB9B,gBAAgB,GAAGH,SAAS,CAAC6B,MAAM,GAAG,CAAC,GAAG,MAAM,GAAG;MAAQ;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAAC1C,EAAA,CAtFIH,gBAAgB;AAAAoD,EAAA,GAAhBpD,gBAAgB;AAwFtB,eAAeA,gBAAgB;AAAC,IAAAoD,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}